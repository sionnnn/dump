// === Variables
$fh-font-color					:$core-body-copy-color !default;

$fh-invalid-border-color		:$clr-danger !default;
$fh-valid-border-color			:$clr-success !default;

$fh-border-radius				:0 !default;
$fh-border-width				:1px !default;
$fh-border-style				:solid !default;
$fh-border-color				:#cfd0d2 !default;

$fh-input-width					:100% !default;
$fh-input-bg-color				:#e8eaeb !default;
$fh-input-padding				:8px 10px !default;

$fh-hover-bg-color				:$fh-input-bg-color !default;
$fh-hover-border-color			:$fh-border-color !default;
$fh-hover-font-color			:$fh-font-color !default;

$fh-focus-bg-color				:#ffffff !default;
$fh-focus-border-color			:$fh-border-color !default;
$fh-focus-font-color			:$fh-font-color !default;

$fh-allow-vendor-styling		:true !default;

$fh-button-font-color			:$fh-font-color !default;
$fh-button-bg-color				:$fh-focus-bg-color !default;
$fh-button-hover-bg-color		:$fh-border-color !default;
$fh-button-hover-font-color		:$fh-font-color !default;

$fh-display						:block !default;
$fh-placeholder-colour			:#7e7f80 !default;

// === Main

input, textarea, select, option, optgroup, button, legend, fieldset
{
	outline						:none;
	color						:$fh-font-color;
	vertical-align				:top;
	display						:$fh-display;
}

datalist
{

}

fieldset
{
	padding						:0;
	border						:0;
}

/*
legend

The legend element represents a caption for the rest of the contents of the legend element's parent fieldset element, if any.

Markup:
<form id="app-login" action="#">
	<fieldset>
	<legend>Login Details</legend>
	<div>
		<label for="user-name">Username:</label>
		<input name="user-name" type="email" placeholder="Your username is your email address" required autofocus>
	</div>
	<div>
		<label for="password">Password:</label>
		<input name="password" type="password" placeholder="6 digits, a combination of numbers and letters" required>
	</div>
	<div>
		<input name="login" type="submit" value="Login">
	</div>
	</fieldset>
</form>

Styleguide 0.x
*/
legend
{
	padding						:0;
	font-weight					:inherit;
}

/*
label

The label represents a caption in a user interface. The caption can be associated with a specific form control, known as the label element's labeled control, either using for attribute, or by putting the form control inside the label element itself.

Markup:
<label for="">Label</label>

Styleguide 0.x
*/
label
{
	display						:$fh-display;
	position 					:relative;
	vertical-align				:middle;

	a
	{
		font-weight				:bold;
	}
}

input[type="text"], input[type="email"], input[type="password"], input[type="search"], input[type="color"], input[type="date"], input[type="datetime"], input[type="datetime-local"], input[type="month"], input[type="number"], input[type="tel"], input[type="time"], input[type="url"], input[type="week"], input[list], input[type="file"], select, textarea
{
	width						:$fh-input-width;
	padding 					:$fh-input-padding;
	border-radius				:$fh-border-radius;
	background-color			:$fh-input-bg-color;
	border						:$fh-border-width $fh-border-style $fh-border-color;

	&:active, &:focus
	{
		cursor 					:text;
		outline 				:none;
	}
}

input[aria-invalid="true"]
{
	border-color				:$fh-invalid-border-color;
}

input[aria-invalid="false"]
{
	border-color				:$fh-valid-border-color;
}

input[type="text"], input[type="email"], input[type="password"], input[type="search"], input[type="color"], input[type="date"], input[type="datetime"], input[type="datetime-local"], input[type="month"], input[type="number"], input[type="tel"], input[type="time"], input[type="url"], input[type="week"], input[list]
{
	-webkit-appearance			:none;
}

/*
textarea

The textarea element represents a multiline plain text edit control for the element's raw value. The contents of the control represent the control's default value.

Markup:
<textarea cols="10" rows="10"></textarea>

Styleguide 0.x
*/
textarea
{
	-webkit-appearance			:none;
	resize 						:vertical;
	overflow 					:auto;
}

/*
Range Input

[Description for input element]

Markup:
<input type="range" />

Styleguide 0.x
*/
input[type="range"]
{
	width						:$fh-input-width;
	-webkit-appearance			:none;

	$width:100%;
	$track-height:12px;
	$track-border-radius:0px;
	$track-background-color:#ac51b5;

	&::-webkit-slider-runnable-track
	{
		width					:$width;
		height					:$track-height;
		cursor					:pointer;
		animate					:0.2s;
		box-shadow				:0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
		background				:$track-background-color;
		border-radius			:$track-border-radius;
		border					:0px solid #000101;
	}

	&:in-range::-webkit-slider-runnable-track
	{

	}

	&:out-of-range::-webkit-slider-runnable-track
	{

	}

	&::-webkit-slider-thumb
	{
		-webkit-appearance		:none;
		box-shadow				:0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
		border					:0px solid #000000;
		height					:20px;
		width					:39px;
		border-radius			:7px;
		background				:#65001c;
		cursor					:pointer;
		margin-top				:-3.6px;
	}

	&:focus::-webkit-slider-runnable-track
	{
		background				:$track-background-color;
	}

	&::-moz-range-track
	{
		width					:$width;
		height					:$track-height;
		cursor					:pointer;
		animate					:0.2s;
		box-shadow				:0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
		background				:$track-background-color;
		border-radius			:$track-border-radius;
		border					:0px solid #000101;
	}

	&::-moz-range-thumb
	{
		box-shadow				:0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
		border					:0px solid #000000;
		height					:20px;
		width					:39px;
		border-radius			:7px;
		background				:#65001c;
		cursor					:pointer;
	}

	&::-ms-track
	{
		width					:$width;
		height					:$track-height;
		cursor					:pointer;
		animate					:0.2s;
		background				:transparent;
		border-color			:transparent;
		border-width			:39px 0;
		color					:transparent;
	}

	&::-ms-fill-lower
	{
		background				:$track-background-color;
		border					:0px solid #000101;
		border-radius			:50px;
		box-shadow				:0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
	}

	&::-ms-fill-upper
	{
		background				:$track-background-color;
		border					:0px solid #000101;
		border-radius			:50px;
		box-shadow				:0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
	}

	&::-ms-thumb
	{
		box-shadow				:0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
		border					:0px solid #000000;
		height					:20px;
		width					:39px;
		border-radius			:7px;
		background				:#65001c;
		cursor					:pointer;
	}

	&:focus::-ms-fill-lower
	{
		background				:$track-background-color;
	}

	&:focus::-ms-fill-upper
	{
		background				:$track-background-color;
	}
}

input[type="file"]
{

}

input[type="search"]
{
	box-sizing					:border-box;
	-webkit-appearance			:none;
}

input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration
{
	-webkit-appearance			:none;
}

/*
select

The select element represents a control for selecting amongst a set of options.

Markup:
<label for="title">Title</label>
<select id="title" name="title">
	<option value="" selected>Please choose</option>
	<option value="Mr">Mr</option>
	<option value="Miss">Miss</option>
	<option value="Mrs">Mrs</option>
	<option value="Ms">Ms</option>
	<option value="Dr">Dr</option>
	<option value="Other">Other</option>
</select>

Styleguide 0.x
*/
select
{
	@if ($fh-allow-vendor-styling == false)
	{
		-webkit-appearance		:none;
		-moz-appearance			:none;
		-ms-appearance			:none;
		-o-appearance			:none;
	}

	option
	{
		padding 				:$fh-input-padding;
	}

	&[multiple]
	{
		height					:auto;
		padding					:0;

		option
		{
			margin				:0;
		}
	}
}

label, input, textarea, button, select, option
{
	cursor 						:pointer;
}

button, input[type="button"], input[type="submit"], input[type="reset"], input[type="image"]
{

}

input[type="image"]
{
	text-align					:center;
	padding 					:$fh-input-padding;
}

input[type="text"], input[type="email"], input[type="password"], input[type="search"], input[type="color"], input[type="date"], input[type="datetime"], input[type="datetime-local"], input[type="month"], input[type="number"], input[type="tel"], input[type="time"], input[type="url"], input[type="week"], input[list], input[type="file"], select, textarea, textarea, select, option, button
{
	&[disabled]
	{
		cursor					:not-allowed;
	}

	&:hover
	{
		background-color		:$fh-hover-bg-color;
		border-color			:$fh-hover-border-color;
	}

	&:focus
	{
		background-color		:$fh-focus-bg-color;
		border-color			:$fh-focus-border-color;
	}
}

input[type="checkbox"], input[type="radio"]
{
	margin-right				:5px;

	// make sure that these always display inline - as they should be next to an input
	display						:inline-block;
	vertical-align				:middle;

	+ label
	{
		width 					:auto;
		display 				:inline-block;
	}

	&[disabled]
	{
		+ label
		{
			cursor				:not-allowed;
		}
	}

	&:focus
	{
		outline					:0;
	}
}

button, input[type="button"], input[type="submit"], input[type="reset"]
{
	&:hover, &:focus
	{
		background-color	 	:$fh-button-hover-bg-color;
		color					:$fh-button-hover-font-color;
	}
}

/*
progress

Represents the completion progress of a task. Progress may be either indeterminate — meaning it is unclear how much work remains before the task is complete (e.g., the task is waiting for a response from a remote host) — or a numeric value between 0 and a given maximum, explicitly specifying the fraction of work that has so far been completed.

Markup:
<p>Progress: <progress> <span>0</span>% </progress> </p>

Styleguide 0.x
*/
progress
{
	appearance					:none;
	height						:20px;
	display 					:block;
	width 						:100%;

	$background 				:#eee;
	$progress 					:#CC0000;

	// firefox
	border						:none;
	background					:$background;
	border-radius				:$fh-border-radius;
	box-shadow					:0 2px 3px rgba(0,0,0,0.2) inset;

	&::-webkit-progress-bar
	{
		background				:$background;
		border-radius			:$fh-border-radius;
		box-shadow				:0 2px 3px rgba(0,0,0,0.2) inset;
	}

	&::-webkit-progress-value
	{
		background-color		:$progress;
		border-radius			:$fh-border-radius;
	}

	&::-moz-progress-bar
	{
		background-color		:$progress;
		border-radius			:$fh-border-radius;
	}
}

/*
Meter

When the meter binding applies to a meter element, the element is expected to render as an 'inline-block' box with a 'height' of '1em' and a 'width' of '5em', a 'vertical-align' of '-0.2em', and with its contents depicting a gauge.
When the element is wider than it is tall(or square), the depiction is expected to be of a horizontal gauge, with the minimum value on the right if the 'direction' property on this element has a computed value of 'rtl', and on the left otherwise. When the element is taller than it is wide, it is expected to depict a vertical gauge, with the minimum value on the bottom.

Markup:
Your score is: <meter> 2 out of 10 </meter>

Styleguide 0.x
*/
meter
{
	appearance					:none;
	height						:20px;
	display 					:block;
	width 						:100%;

	$optimum 					:$clr-success;
	$sub-optimum 				:$clr-warning;
	$sub-sub-optimum 			:#CC4600;
	$background 				:#eee;

	// firefox
	background					:$background;
	border-radius				:$fh-border-radius;
	box-shadow					:0 2px 3px rgba(0,0,0,0.2) inset;

	&::-webkit-meter-bar
	{
		background				:$background;
		border-radius			:$fh-border-radius;
		box-shadow				:0 2px 3px rgba(0,0,0,0.2) inset;
	}

	&::-webkit-meter-optimum-value, &::-webkit-meter-suboptimum-value, &::-webkit-meter-even-less-good-value
	{
		border-radius			:$fh-border-radius;
	}

	&::-webkit-meter-optimum-value
	{
		background				:$optimum;
	}

	&::-webkit-meter-suboptimum-value
	{
		background				:$sub-optimum;
	}

	&::-webkit-meter-even-less-good-value
	{
		background				:$sub-sub-optimum;
	}

	// firefox
	&::-moz-meter-bar
	{
		border-radius			:$fh-border-radius;
	}

	&:-moz-meter-optimum::-moz-meter-bar
	{
		background				:$optimum;
	}

	&:-moz-meter-sub-optimum::-moz-meter-bar
	{
		background				:$sub-optimum;
	}

	&:-moz-meter-sub-sub-optimum::-moz-meter-bar
	{
		background				:$sub-sub-optimum;
	}
}

input, textarea
{
	@include placeholder
	{
		color 					:$fh-placeholder-colour;
	}
}

/*
Color Input

[Description for input element]

Markup:
...

Styleguide 0.x
*/
input[type="color"]
{
	padding 					:0;
	width 						:auto;
	min-width					:1.5rem;
}
